openapi: 3.0.3
info:
  title: Rokwire Surveys Building Block API
  description: Surveys Building Block API Documentation
  version: 1.11.0
servers:
  - url: 'https://api.rokwire.illinois.edu/surveys'
    description: Production server
  - url: 'https://api-test.rokwire.illinois.edu/surveys'
    description: Test server
  - url: 'https://api-dev.rokwire.illinois.edu/surveys'
    description: Development server
  - url: 'http://localhost/surveys'
    description: Local server
tags:
  - name: Client
    description: Client applications APIs.
  - name: Admin
    description: Clients administration applications APIs.
  - name: BBs
    description: Building Block APIs.
  - name: TPS
    description: Third-Party Service APIs.
  - name: System
    description: Third-Party Service APIs.
  - name: Default
    description: Default APIs.
paths:
  /version:
    get:
      tags:
        - Default
      summary: Get version
      description: |
        Gets current version of this service
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: v1.0.0
        '500':
          description: Internal error
  /api/surveys:
    get:
      tags:
        - Client
      summary: Retrieves surveys
      description: |
        Retrieves surveys matching the provided query
      security:
        - bearerAuth: []
      parameters:
        - name: ids
          in: query
          description: A comma-separated list of survey IDs to retrieve
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: types
          in: query
          description: A comma-separated list of survey types to retrieve
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: calendar_event_id
          in: query
          description: eventID of calendar eventID
          required: false
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of results to be loaded in one page
          required: false
          style: simple
          explode: false
          schema:
            type: number
        - name: offset
          in: query
          description: The number of results previously loaded
          required: false
          style: simple
          explode: false
          schema:
            type: number
        - name: public
          in: query
          description: Shows if the survery is public or not
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
        - name: archived
          in: query
          description: Shows if the survery is archived or not
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
        - name: completed
          in: query
          description: Shows if the survery is completed or not
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
        - name: start_time_before
          in: query
          description: Only include surveys starting before this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: start_time_after
          in: query
          description: Only include surveys starting after this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_time_before
          in: query
          description: Only include surveys ending before this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_time_after
          in: query
          description: Only include surveys ending after this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Survey'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    post:
      tags:
        - Client
      summary: Create a new survey
      description: Create a new survey
      security:
        - bearerAuth: []
      requestBody:
        description: model.Survey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/surveys/{id}':
    get:
      tags:
        - Client
      summary: Retrieves a survey by id
      description: |
        Retrieves a survey by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    put:
      tags:
        - Client
      summary: Updates a survey with the specified id
      description: |
        Updates a survey with the specified id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Data body model.SurveyRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Client
      summary: Deletes a survey with the specified id
      description: |
        Deletes a survey with the specified id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal error
  '/api/surveys/{id}/responses':
    get:
      tags:
        - Client
      summary: Retrieves all survey responses for specified survey
      description: |
        Retrieves all survey responses for specified survey
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: start_date
          in: query
          description: The start of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_date
          in: query
          description: The end of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of results to be loaded in one page
          required: false
          style: simple
          explode: false
          schema:
            type: number
        - name: offset
          in: query
          description: The number of results previously loaded
          required: false
          style: simple
          explode: false
          schema:
            type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SurveyResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/survey-responses:
    get:
      tags:
        - Client
      summary: Retrieves survey responses for the current user
      description: |
        Retrieves survey responses for the current user
      security:
        - bearerAuth: []
      parameters:
        - name: survey_ids
          in: query
          description: A comma-separated list of survey IDs to retrieve responses for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: survey_types
          in: query
          description: A comma-separated list of survey types to retrieve responses for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: start_date
          in: query
          description: The start of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_date
          in: query
          description: The end of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of results to be loaded in one page
          required: false
          style: simple
          explode: false
          schema:
            type: number
        - name: offset
          in: query
          description: The number of results previously loaded
          required: false
          style: simple
          explode: false
          schema:
            type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SurveyResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Client
      summary: Deletes survey responses for the current user
      description: |
        Deletes survey responses for the current user
      security:
        - bearerAuth: []
      parameters:
        - name: survey_ids
          in: query
          description: A comma-separated list of survey IDs to deletes responses for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: survey_types
          in: query
          description: A comma-separated list of survey types to delete responses for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: start_date
          in: query
          description: The start of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_date
          in: query
          description: The end of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    post:
      tags:
        - Client
      summary: Create a new survey response
      description: Create a new survey response
      security:
        - bearerAuth: []
      requestBody:
        description: model.SurveyResponse
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/survey-responses/{id}':
    get:
      tags:
        - Client
      summary: Retrieves a survey response by id
      description: |
        Retrieves a survey response by id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    put:
      tags:
        - Client
      summary: Updates a survey response with the specified id
      description: |
        Updates a survey response with the specified id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Data body model.SurveyResponse
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Client
      summary: Deletes a survey response with the specified id
      description: |
        Deletes a survey response with the specified id
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal error
  /api/survey-alerts:
    post:
      tags:
        - Client
      summary: Create a new survey alert
      description: |
        Create a new survey alert that will send email to notifications BB
      security:
        - bearerAuth: []
      requestBody:
        description: model.SurveyAlert
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_key:
                  type: string
                content:
                  type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1survey-alerts/post/requestBody/content/application~1json/schema'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/creator/surveys:
    get:
      tags:
        - Client
      summary: Retrieves surveys created by the requesting user
      description: |
        Retrieves surveys created by the requesting user matching the provided query
      security:
        - bearerAuth: []
      parameters:
        - name: ids
          in: query
          description: A comma-separated list of survey IDs to retrieve
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: types
          in: query
          description: A comma-separated list of survey types to retrieve
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of results to be loaded in one page
          required: false
          style: simple
          explode: false
          schema:
            type: number
        - name: offset
          in: query
          description: The number of results previously loaded
          required: false
          style: simple
          explode: false
          schema:
            type: number
        - name: start_time_before
          in: query
          description: Only include surveys starting before this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: start_time_after
          in: query
          description: Only include surveys starting after this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_time_before
          in: query
          description: Only include surveys ending before this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_time_after
          in: query
          description: Only include surveys ending after this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Survey'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/user-data:
    get:
      tags:
        - Client
      summary: Retrieves surveys
      description: |
        Retrieves surveys matching the provided query
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserData'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/admin/configs:
    get:
      tags:
        - Admin
      summary: Get configs
      description: |
        Get existing configs by search parameters

        **Auth:** Requires valid admin token with one of the following permissions:
        - `get_configs_<name>`
        - `update_configs_<name>`
        - `delete_configs_<name>`
        - `all_configs_<name>`
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          description: config type
          required: false
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Config'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    post:
      tags:
        - Admin
      summary: Create config
      description: |
        Creates a new config

        **Auth:** Requires valid admin token with one of the following permissions:
        - `update_configs_<name>`
        - `all_configs_<name>`
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
            examples:
              system:
                summary: System-wide config
                value:
                  type: config_type
                  all_apps: true
                  all_orgs: true
                  system: true
                  data:
                    example_env: example
              org_admin:
                summary: Organization-wide config
                value:
                  type: config_type
                  all_apps: true
                  all_orgs: false
                  system: false
                  data:
                    example_env: example
              app_org_specific:
                summary: Application organization specific config
                value:
                  type: config_type
                  all_apps: false
                  all_orgs: false
                  system: false
                  data:
                    example_env: example
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/admin/configs/{id}':
    get:
      tags:
        - Admin
      summary: Get config
      description: |
        Gets config record

        **Auth:** Requires valid admin token with one of the following permissions:
        - `get_configs_<name>`
        - `update_configs_<name>`
        - `delete_configs_<name>`
        - `all_configs_<name>`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of config to retrieve
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    put:
      tags:
        - Admin
      summary: Update config
      description: |
        Updates existing config record

        **Auth:** Requires valid admin token with one of the following permissions:
        - `update_configs_<name>`
        - `all_configs_<name>`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of config to update
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: New config content
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
            examples:
              system:
                summary: System-wide config
                value:
                  type: config_type
                  all_apps: true
                  all_orgs: true
                  system: true
                  data:
                    example_env: example
              org_admin:
                summary: Organization-wide config
                value:
                  type: config_type
                  all_apps: true
                  all_orgs: false
                  system: false
                  data:
                    example_env: example
              app_org_specific:
                summary: Application organization specific config
                value:
                  type: config_type
                  all_apps: false
                  all_orgs: false
                  system: false
                  data:
                    example_env: example
        required: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Admin
      summary: Delete config
      description: |
        Deletes config record

        **Auth:** Requires valid admin token with one of the following permissions:
        - `delete_configs_<name>`
        - `all_configs_<name>`
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of config to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/admin/surveys:
    get:
      tags:
        - Admin
      summary: Retrieves surveys
      description: |
        Retrieves surveys matching the provided query

         **Auth:** Requires admin token with `get_surveys`, `updated_surveys`, `delete_surveys`, or `all_surveys` permission
      security:
        - bearerAuth: []
      parameters:
        - name: ids
          in: query
          description: A comma-separated list of survey IDs to retrieve
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: types
          in: query
          description: A comma-separated list of survey types to retrieve
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: calendar_event_id
          in: query
          description: eventID of calendar eventID
          required: false
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of results to be loaded in one page
          required: false
          style: simple
          explode: false
          schema:
            type: number
        - name: offset
          in: query
          description: The number of results previously loaded
          required: false
          style: simple
          explode: false
          schema:
            type: number
        - name: public
          in: query
          description: Shows if the survery is public or not
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
        - name: archived
          in: query
          description: Shows if the survery is archived or not
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
        - name: completed
          in: query
          description: Shows if the survery is completed or not
          required: false
          style: simple
          explode: false
          schema:
            type: boolean
        - name: start_time_before
          in: query
          description: Only include surveys starting before this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: start_time_after
          in: query
          description: Only include surveys starting after this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_time_before
          in: query
          description: Only include surveys ending before this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_time_after
          in: query
          description: Only include surveys ending after this UTC timestamp
          required: false
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Survey'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    post:
      tags:
        - Admin
      summary: Create a new survey
      description: |
        Create a new survey
         **Auth:** Requires admin token with `updated_surveys` or `all_surveys` permission
      security:
        - bearerAuth: []
      requestBody:
        description: model.Survey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/admin/surveys/{id}':
    get:
      tags:
        - Admin
      summary: Retrieves a survey by id
      description: |
        Retrieves a survey by id

         **Auth:** Requires admin token with `get_surveys`, `updated_surveys`, `delete_surveys`, or `all_surveys` permission
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    put:
      tags:
        - Admin
      summary: Updates a survey with the specified id
      description: |
        Updates a survey with the specified id
         **Auth:** Requires admin token with either `updated_surveys` or `all_surveys` permission
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Data body model.Survey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Admin
      summary: Deletes a survey with the specified id
      description: |
        Deletes a survey with the specified id
         **Auth:** Requires admin token with either `delete_surveys` or `all_surveys` permission
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal error
  '/api/admin/surveys/{id}/responses':
    get:
      tags:
        - Admin
      summary: Retrieves all survey responses for specified survey
      deprecated: true
      description: |
        Retrieves all survey responses for specified survey

        **Auth:** Requires admin token
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: start_date
          in: query
          description: The start of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_date
          in: query
          description: The end of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of results to be loaded in one page
          required: false
          style: simple
          explode: false
          schema:
            type: number
        - name: offset
          in: query
          description: The number of results previously loaded
          required: false
          style: simple
          explode: false
          schema:
            type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SurveyResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/admin/alert-contacts:
    post:
      tags:
        - Admin
      summary: Create a new alert contact
      description: |
        Create a new alert contact
         **Auth:** Requires admin token with `updated_alert_contacts` or `all_alert_contacts` permission
      security:
        - bearerAuth: []
      requestBody:
        description: model.AlertContact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertContact'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertContact'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    get:
      tags:
        - Admin
      summary: Retrieves  all alert contacts
      description: |
        Retrieves  all alert contacts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertContact'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  '/api/admin/alert-contacts/{id}':
    get:
      tags:
        - Admin
      summary: Retrieves an alert contact by id
      description: |
        Retrieves an alert contact by id
         **Auth:** Requires admin token with `get_alert_contact`, `updated_alert_contacts`, `delete_alert_contacts`, or `all_alert_contacts` permission
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertContact'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    put:
      tags:
        - Admin
      summary: Updates an alert contact with the specified id
      description: |
        Updates an alert contact with the specified id
         **Auth:** Requires admin token with either `updated_alert_contacts` or `all_alert_contacts` permission
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Data body model.AlertContact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertContact'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
    delete:
      tags:
        - Admin
      summary: Deletes an alert contact with the specified id
      description: |
        Deletes a alert contact with the specified id
         **Auth:** Requires admin token with either `delete_alert_contacts` or `all_alert_contacts` permission
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal error
  '/api/admin/surveys/{id}/response':
    get:
      tags:
        - Admin
      summary: Retrieves all survey responses for specified survey
      description: |
        Retrieves all survey responses for specified survey

        **Auth:** Requires admin token with `get_survey_responses` permission
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: start_date
          in: query
          description: The start of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_date
          in: query
          description: The end of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: limit
          in: query
          description: The number of results to be loaded in one page
          required: false
          style: simple
          explode: false
          schema:
            type: number
        - name: offset
          in: query
          description: The number of results previously loaded
          required: false
          style: simple
          explode: false
          schema:
            type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SurveyResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
  /api/analytics/survey-responses:
    get:
      tags:
        - Analytics
      summary: Retrieves anonymized survey responses
      description: |
        Retrieves anonymized survey responses for analytics
      security:
        - bearerAuth: []
      parameters:
        - name: survey_types
          in: query
          description: A comma-separated list of survey types to retrieve responses for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: start_date
          in: query
          description: The start of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: end_date
          in: query
          description: The end of the date range to search for
          required: false
          style: simple
          explode: false
          schema:
            type: string
        - name: time_offset
          in: query
          description: The number of hours before now to search for
          required: false
          style: simple
          explode: false
          schema:
            type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SurveyResponseAnonymous'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Config:
      required:
        - id
        - type
        - app_id
        - org_id
        - system
        - data
        - date_created
        - date_updated
      type: object
      properties:
        id:
          readOnly: true
          type: string
        type:
          type: string
        app_id:
          readOnly: true
          type: string
        org_id:
          readOnly: true
          type: string
        system:
          type: boolean
        data:
          anyOf:
            - $ref: '#/components/schemas/EnvConfigData'
        date_created:
          readOnly: true
          type: string
        date_updated:
          readOnly: true
          type: string
          nullable: true
    EnvConfigData:
      type: object
      required:
        - splunk_token
      properties:
        splunk_token:
          type: string
    Survey:
      type: object
      properties:
        id:
          readOnly: true
          type: string
        creator_id:
          readOnly: true
          type: string
        org_id:
          type: string
          readOnly: true
        app_id:
          type: string
          readOnly: true
        title:
          type: string
        more_info:
          type: string
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SurveyData'
        scored:
          type: boolean
        result_rules:
          type: string
        result_json:
          type: string
        type:
          type: string
        stats:
          $ref: '#/components/schemas/SurveyStats'
        sensitive:
          type: boolean
        anonymous:
          type: boolean
        default_data_key:
          type: string
        default_data_key_rule:
          type: string
        constants:
          type: object
        strings:
          type: object
        sub_rules:
          type: object
        response_keys:
          type: array
          items:
            type: string
        date_created:
          type: string
          readOnly: true
        date_updated:
          type: string
          readOnly: true
          nullable: true
        calendar_event_id:
          type: string
        start_date:
          type: string
          nullable: true
        end_date:
          type: string
          nullable: true
        public:
          type: boolean
          nullable: true
        archived:
          type: boolean
          nullable: true
        estimated_completion_time:
          type: integer
          format: int64
          nullable: true
    SurveyData:
      type: object
      properties:
        section:
          type: string
        allow_skip:
          type: boolean
        text:
          type: string
        more_info:
          type: string
        default_follow_up_key:
          type: string
        default_response_rule:
          type: string
        follow_up_rule:
          type: string
        score_rule:
          type: string
        replace:
          type: boolean
        response:
          type: object
        extras:
          type: object
          nullable: true
        type:
          type: string
        correct_answer:
          type: object
          nullable: true
        correct_answers:
          type: array
          items: {}
          nullable: true
        options:
          type: array
          items:
            $ref: '#/components/schemas/OptionData'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionData'
        self_score:
          type: boolean
          nullable: true
        maximum_score:
          type: number
          format: double
          nullable: true
        style:
          type: string
          nullable: true
        allow_multiple:
          type: boolean
          nullable: true
        ask_time:
          type: boolean
        minimum:
          type: number
          format: double
          nullable: true
        maximum:
          type: number
          format: double
          nullable: true
        whole_num:
          type: boolean
          nullable: true
        min_length:
          type: integer
          nullable: true
        max_length:
          type: integer
          nullable: true
        data_format:
          type: object
          nullable: true
        data_keys:
          type: array
          items:
            type: string
    SurveyStats:
      type: object
      properties:
        total:
          type: integer
        complete:
          type: integer
        scored:
          type: integer
        scores:
          type: object
          additionalProperties:
            type: number
            format: double
        maximum_scores:
          type: object
          additionalProperties:
            type: number
            format: double
    ActionData:
      type: object
      properties:
        type:
          type: string
        label:
          type: string
        data:
          type: string
        params:
          nullable: true
          type: object
    OptionData:
      type: object
      properties:
        title:
          type: string
        value:
          type: object
        score:
          type: number
          nullable: true
        selected:
          type: boolean
    SurveyResponse:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        org_id:
          type: string
          readOnly: true
        app_id:
          type: string
          readOnly: true
        user_id:
          type: string
          readOnly: true
        survey:
          $ref: '#/components/schemas/Survey'
        date_created:
          type: string
          readOnly: true
        date_updated:
          type: string
          readOnly: true
          nullable: true
    SurveyResponseAnonymous:
      type: object
      required:
        - id
        - creator_id
        - org_id
        - app_id
        - title
        - type
        - stats
        - date_created
      properties:
        id:
          type: string
        creator_id:
          type: string
        org_id:
          type: string
        app_id:
          type: string
        title:
          type: string
        type:
          type: string
        stats:
          $ref: '#/components/schemas/SurveyStats'
        date_created:
          type: string
        date_updated:
          type: string
          nullable: true
    AlertContact:
      type: object
      properties:
        key:
          type: string
        type:
          type: string
        address:
          type: string
        params:
          type: object
    UserData:
      type: object
      properties:
        survey:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              org_id:
                type: string
              app_id:
                type: string
              creator_id:
                type: string
              account_id:
                type: string
              context:
                type: object
              title:
                type: string
              type:
                type: string
        survey_responses:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              org_id:
                type: string
              app_id:
                type: string
              creator_id:
                type: string
              account_id:
                type: string
              context:
                type: object
              title:
                type: string
    _admin_req_update-configs:
      required:
        - type
        - all_apps
        - all_orgs
        - system
        - data
      type: object
      properties:
        type:
          type: string
        all_apps:
          writeOnly: true
          type: boolean
        all_orgs:
          writeOnly: true
          type: boolean
        system:
          type: boolean
        data:
          anyOf:
            - $ref: '#/components/schemas/EnvConfigData'
