// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	model "application/core/model"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Analytics is an autogenerated mock type for the Analytics type
type Analytics struct {
	mock.Mock
}

// GetAnonymousSurveyResponses provides a mock function with given fields: surveyTypes, startDate, endDate
func (_m *Analytics) GetAnonymousSurveyResponses(surveyTypes []string, startDate *time.Time, endDate *time.Time) ([]model.SurveyResponseAnonymous, error) {
	ret := _m.Called(surveyTypes, startDate, endDate)

	if len(ret) == 0 {
		panic("no return value specified for GetAnonymousSurveyResponses")
	}

	var r0 []model.SurveyResponseAnonymous
	var r1 error
	if rf, ok := ret.Get(0).(func([]string, *time.Time, *time.Time) ([]model.SurveyResponseAnonymous, error)); ok {
		return rf(surveyTypes, startDate, endDate)
	}
	if rf, ok := ret.Get(0).(func([]string, *time.Time, *time.Time) []model.SurveyResponseAnonymous); ok {
		r0 = rf(surveyTypes, startDate, endDate)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.SurveyResponseAnonymous)
		}
	}

	if rf, ok := ret.Get(1).(func([]string, *time.Time, *time.Time) error); ok {
		r1 = rf(surveyTypes, startDate, endDate)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAnalytics creates a new instance of Analytics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAnalytics(t interface {
	mock.TestingT
	Cleanup(func())
}) *Analytics {
	mock := &Analytics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
